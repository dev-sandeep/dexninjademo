{"version":3,"sources":["ContextApi/BaseContext.js","Utility/Config.js","ContextApi/UseBaseContext.js","ContextApi/UrlCall.js","Pages/Header.js","Components/Theme/Tile.js","Pages/Home.js","Utility/API.js","Components/Project/AccordionCard.js","Components/Project/InputGroupBtn.js","Components/Project/DetailSetting.js","Components/Project/DocumentSetting.js","Components/Project/Box.js","Components/Project/PDFViewer.js","Pages/Details.js","Components/Project/TableCol.js","Components/Project/FilterInFoText.js","Pages/Collections.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync"],"names":["BaseContext","React","createContext","CONFIG","ROUTE","COLLECTIONS","DETAILS","BaseContextProvider","props","useState","dashboard","id","name","icon","faFolder","color","link","faFile","faCogs","faUsers","state","setState","Provider","value","children","UseBaseContext","useContext","setData","data","customDataObj","callbackFn","temp","getData","UrlCall","Header","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","className","Tile","history","useHistory","onClick","item","push","faArrowAltCircleRight","Home","loop","map","val","key","URL","GET","KEY","FILTERS","DOCUMENT","POST","DOCUMENTS","ENTITIES","PUT","getDocuments","param","url","replace","Promise","res","rej","get","then","resp","e","uploadDoc","cid","fileData","console","error","resolve","reject","Axios","post","updateEntities","did","put","AccordionCard","checkedData","setCheckedData","onCheckBoxChange","isChecked","target","checked","parent","selectedData","hasOwnProperty","applyFilters","filter","inst","contextData","filterData","arr","Object","keys","join","Card","Accordion","as","eventKey","event","head","JSON","stringify","length","Body","Form","Group","checks","Check","custom","onChange","type","label","InputGroupBtn","stateData","setStateData","InputGroup","FormControl","defaultValue","aria-label","Append","Button","variant","click","log","save","activestatus","faCheck","DetailSetting","setActiveStatus","onChangeActiveStatus","typeVal","newStatusVal","finalData","params","onEditReq","newVal","onSave","oldType","newType","oldVal","status","useEffect","DropdownButton","ButtonGroup","title","Dropdown","Item","faStrikethrough","faEdit","DocumentSetting","settings","Box","solid","css","PDFViewer","page","totalPage","pg","onLoadSuccess","numPages","file","document","width","window","innerWidth","pageNumber","Details","setDocument","entityData","setEntityData","docData","setDocData","viewType","setViewType","textFile","setTextFile","collectionId","match","documentId","setDocumentUrl","links","_links","find","rel","init","d","v","getDocument","setEntities","getEntities","index","class","controlId","Control","size","TableCol","faFilePdf","created_on","faTimes","faDownload","FilterInFoText","faFilter","Collections","collectionData","setCollectionData","setFilterData","setSelectedData","inputRef","setInputRef","setCollections","selectedId","setFilters","setDocuments","getCollections","firstCollection","collection","getFilters","changeCollection","values","filterLoop","keywords","md","ref","inp","files","formData","FormData","append","faUpload","defaultActiveKey","App","exact","path","component","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","Error","code","module","exports"],"mappings":"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","file":"static/js/main.2b53231d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { faFile, faFolder, faCogs, faUsers } from '@fortawesome/free-solid-svg-icons'\r\nimport { getRoutes } from '../Utility/Config'\r\n\r\nconst BaseContext = React.createContext([{}, () => { }]);\r\nconst CONFIG = getRoutes();\r\nconst BaseContextProvider = (props) => {\r\n    const [state, setState] = useState({\r\n        dashboard: [{\r\n            id: 1,\r\n            name: 'Manage Collections',\r\n            icon: faFolder,\r\n            color: 'bg-aqua',\r\n            link: CONFIG.ROUTE.COLLECTIONS\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Manage Documents',\r\n            icon: faFile,\r\n            color: 'bg-green',\r\n            link: CONFIG.ROUTE.COLLECTIONS\r\n        }, {\r\n            id: 3,\r\n            name: 'Manage Configurations',\r\n            icon: faCogs,\r\n            color: 'bg-yellow',\r\n            link: CONFIG.ROUTE.COLLECTIONS\r\n        }, {\r\n            id: 4,\r\n            name: 'Manage Users',\r\n            icon: faUsers,\r\n            color: 'bg-red',\r\n            link: CONFIG.ROUTE.COLLECTIONS\r\n        }]\r\n    });\r\n\r\n    return (\r\n        <BaseContext.Provider value={[state, setState]}>\r\n            {props.children}\r\n        </BaseContext.Provider>\r\n    );\r\n};\r\n\r\nexport { BaseContext, BaseContextProvider };","function getRoutes() {\r\n    return {\r\n        ROUTE: {\r\n            COLLECTIONS: 'collections',\r\n            DETAILS: 'details'\r\n        }\r\n    }\r\n}\r\n\r\nfunction getUrl() {\r\n    return {\r\n        URL: {\r\n            COLLECTIONS: {\r\n                GET: 'http://ec2-35-176-120-96.eu-west-2.compute.amazonaws.com:5000/api/collections',\r\n                KEY: 'collections'\r\n            },\r\n            FILTERS: {\r\n                GET: 'http://ec2-35-176-120-96.eu-west-2.compute.amazonaws.com:5002/dexninja_api/collections/$id/filters',\r\n                KEY: 'filters'\r\n            },\r\n            DOCUMENT: {\r\n                GET: 'http://ec2-35-176-120-96.eu-west-2.compute.amazonaws.com:5002/dexninja_api/collections/$cid/documents/$did',\r\n                POST: 'http://ec2-35-176-120-96.eu-west-2.compute.amazonaws.com:5002/dexninja_api/collections/$cid/documents',\r\n                KEY: 'document',\r\n            },\r\n            DOCUMENTS: {\r\n                GET: 'http://ec2-35-176-120-96.eu-west-2.compute.amazonaws.com:5002/dexninja_api/collections/$id/documents?size=20',\r\n                KEY: 'documents'\r\n            },\r\n            ENTITIES: {\r\n                GET: 'http://ec2-35-176-120-96.eu-west-2.compute.amazonaws.com:5002/dexninja_api/collections/$cid/documents/$did/entities',\r\n                PUT: 'http://ec2-35-176-120-96.eu-west-2.compute.amazonaws.com:5002/dexninja_api/collections/$cid/documents/$did/entities',\r\n                KEY: 'entities'\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    getRoutes,\r\n    getUrl\r\n}","import { useContext, useEffect } from 'react';\r\nimport { BaseContext } from './BaseContext'\r\n\r\nconst UseBaseContext = () => {\r\n    const [state, setState] = useContext(BaseContext);\r\n\r\n    function setData(data, customDataObj, callbackFn) {\r\n        setState(state => {\r\n            let temp = {\r\n                ...state, [customDataObj]: data\r\n            };\r\n            \r\n            if (typeof callbackFn === \"function\") {\r\n                callbackFn(temp);\r\n            }\r\n\r\n            return temp;\r\n        });\r\n    }\r\n\r\n    function getData(customDataObj) {\r\n        return state[customDataObj];\r\n    }\r\n\r\n    return {\r\n        setData,\r\n        getData,\r\n    }\r\n}\r\n\r\n// const { setData, getData } = UseBaseContext();\r\nexport default UseBaseContext;","import Axios from 'axios'\r\nimport UseBaseContext from './../ContextApi/UseBaseContext'\r\n\r\nfunction UrlCall() {\r\n    const {\r\n        setData\r\n    } = UseBaseContext();\r\n\r\n    const BASE_URL = 'https://api.themoviedb.org/3/discover/movie?api_key=3a94078fb34b772a31d9a1348035bed7&language=en-US';\r\n    const HEADER_MENU = '&sort_by=$custom.desc&include_adult=false&include_video=false&page=1'\r\n    let url = BASE_URL;\r\n    getCall(url);\r\n\r\n    function getCall(url) {\r\n        return new Promise((resolve, reject) => {\r\n            Axios.get(url).then((promise) => {\r\n                resolve(promise.data);\r\n            });\r\n        })\r\n    };\r\n    // //rated; popularity; favorites; recommendations; watchlist\r\n    function getCustomCall(menu = 'popularity') {\r\n        let url = BASE_URL + HEADER_MENU.replace('$custom', menu);\r\n        console.log(url);\r\n        getCall(url).then((data) => {\r\n            if (data && data.results) {\r\n                // setShowMovies(data.results);\r\n            }\r\n        })\r\n    }\r\n\r\n    /* the first call which the system would do */\r\n    function defaultCall() {\r\n        return new Promise((resolve, reject) => {\r\n            getCall(url).then((data) => {\r\n                if (data && data.results) {\r\n                    setData(data.results, \"movies\");\r\n                    resolve(data.results);\r\n                }\r\n            })\r\n        });\r\n    }\r\n\r\n    return {\r\n        defaultCall,\r\n        getCustomCall\r\n    }\r\n}\r\n\r\nexport default UrlCall;","import React, { useState } from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport { Link } from 'react-router-dom';\r\nimport UrlCall from './../ContextApi/UrlCall'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\nimport UseBaseContext from './../ContextApi/UseBaseContext'\r\n\r\nfunction Header() {\r\n    /* get the context instance */\r\n    const { setData, getData } = UseBaseContext();\r\n\r\n    /* a must declaration to set and get the data */\r\n    const [searchVal, setSearchVal] = useState('');\r\n\r\n    /* responsible for handling the changes */\r\n    function handleChange(e) {\r\n        setSearchVal(e.target.value);\r\n    }\r\n\r\n    //handle the search click button\r\n    function onSearchClick() {\r\n        /**\r\n         * Standard way to set or get the data\r\n         * ACROSS THE UNIVERSE!\r\n         */\r\n        setData(searchVal, \"search\");\r\n    }\r\n\r\n    return (\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n            <Navbar.Brand href=\"/\">Dexninja</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                    {/* just to show how the text would be shown live */}\r\n                    {/* <Nav.Link href=\"/\">Home <small>{searchVal ? `[${searchVal}]` : ''}</small></Nav.Link> */}\r\n                </Nav>\r\n                {/* <Form inline>\r\n                    <FormControl onChange={handleChange} type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                    <Button variant=\"outline-success\" onClick={onSearchClick}>Search</Button>\r\n                </Form> */}\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCog, faArrowAltCircleRight } from '@fortawesome/free-solid-svg-icons'\r\nimport {\r\n    BrowserRouter as Router,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nexport default function Tile(props) {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div className=\"col-lg-3 col-xs-6\">\r\n            <div className={`small-box ${props.color}`}>\r\n                <div className=\"inner\">\r\n                    <p>{props.name}</p>\r\n\r\n                    {/* <p>New Orders</p> */}\r\n                </div>\r\n                <div className=\"icon\">\r\n                    <FontAwesomeIcon icon={props.icon} />\r\n                </div>\r\n                <a href=\"#\" className=\"small-box-footer\" onClick={(item) => {\r\n                    history.push(`/${props.link}`);\r\n                }}>\r\n                    More info <FontAwesomeIcon icon={faArrowAltCircleRight} />\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport UseBaseContext from './../ContextApi/UseBaseContext'\r\nimport Tile from '../Components/Theme/Tile'\r\nfunction Home() {\r\n    /* get the context instance */\r\n    const { getData } = UseBaseContext();\r\n    var data = getData('dashboard');\r\n\r\n    var loop = data.map((val) => (\r\n        <Tile\r\n            key={val.name}\r\n            link={val.link}\r\n            icon={val.icon}\r\n            name={val.name}\r\n            color={val.color} />\r\n    ));\r\n    /* all of the main content goes here  */\r\n    return (\r\n        <section id=\"home-pg\" className=\"m-10-b\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {loop}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Home;","import Axios from 'axios';\r\nimport UseBaseContext from '../ContextApi/UseBaseContext'\r\nimport { getUrl } from './Config'\r\n\r\nconst CONFIG = getUrl();\r\nconst CORS_WORKAROUND = '';//'https://cors-anywhere.herokuapp.com/';\r\n// const {setData, getData} = UseBaseContext();\r\n\r\nfunction getCollections() {\r\n    let url = CORS_WORKAROUND + CONFIG.URL.COLLECTIONS.GET;\r\n    return new Promise((res, rej) => {\r\n        get(url).then((resp) => {\r\n            let data = resp.data;\r\n            res(data);\r\n\r\n        }, (e) => {\r\n            rej(e);\r\n        });\r\n    });\r\n\r\n}\r\n\r\nfunction getFilters(id) {\r\n    let url = CORS_WORKAROUND + CONFIG.URL.FILTERS.GET;\r\n    url = url.replace('$id', id);\r\n    return new Promise((res, rej) => {\r\n        get(url).then((resp) => {\r\n            let data = resp.data;\r\n            res(data);\r\n\r\n        }, (e) => {\r\n            rej(e);\r\n        });\r\n    });\r\n\r\n}\r\n\r\nfunction getDocuments(id, param) {\r\n    param = param || '';\r\n    let url = CORS_WORKAROUND + CONFIG.URL.DOCUMENTS.GET + param;\r\n    url = url.replace('$id', id);\r\n    return new Promise((res, rej) => {\r\n        get(url).then((resp) => {\r\n            let data = resp.data;\r\n            res(data);\r\n\r\n        }, (e) => {\r\n            rej(e);\r\n        });\r\n    });\r\n}\r\n\r\nfunction getEntities(cid, did) {\r\n    let url = CORS_WORKAROUND + CONFIG.URL.ENTITIES.GET;\r\n    url = url.replace('$cid', cid).replace('$did', did);\r\n    return new Promise((res, rej) => {\r\n        get(url).then((resp) => {\r\n            let data = resp.data;\r\n            res(data);\r\n\r\n        }, (e) => {\r\n            rej(e);\r\n        });\r\n    });\r\n\r\n}\r\n\r\nfunction getDocument(cid, did) {\r\n    let url = CORS_WORKAROUND + CONFIG.URL.DOCUMENT.GET;\r\n    url = url.replace('$cid', cid).replace('$did', did);\r\n    return new Promise((res, rej) => {\r\n        get(url).then((resp) => {\r\n            let data = resp.data;\r\n            res(data);\r\n\r\n        }, (e) => {\r\n            rej(e);\r\n        });\r\n    });\r\n\r\n}\r\n\r\nfunction uploadDoc(cid, fileData) {\r\n    let url = CORS_WORKAROUND + CONFIG.URL.DOCUMENT.POST;\r\n    url = url.replace('$cid', cid);\r\n    return new Promise((res, rej) => {\r\n        post(url, fileData).then((resp) => {\r\n            let data = resp.data;\r\n            res(data);\r\n\r\n        }, (e) => {\r\n            rej(e);\r\n        });\r\n    });\r\n}\r\n\r\nfunction updateEntities(cid, did, param){\r\n    let url = CORS_WORKAROUND + CONFIG.URL.ENTITIES.PUT;\r\n    url = url.replace('$cid', cid).replace('$did', did);\r\n    return new Promise((res, rej) => {\r\n        put(url, param).then((resp) => {\r\n            let data = resp.data;\r\n            res(data);\r\n\r\n        }, (e) => {\r\n            rej(e);\r\n        });\r\n    });\r\n\r\n}\r\n\r\nfunction get(url) {\r\n    if (!url) {\r\n        console.error(\"URL is a mandatory field to make an API call\");\r\n        return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        Axios.get(url).then((data) => {\r\n            resolve(data);\r\n        }, (e) => {\r\n            reject(e);\r\n        });\r\n    });\r\n}\r\n\r\nfunction post(url, param) {\r\n    if (!url) {\r\n        console.error(\"URL is a mandatory field to make an API call\");\r\n        return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        Axios.post(url, param).then((resp) => {\r\n            resolve(resp);\r\n        }, () => {\r\n            reject();\r\n        });\r\n    });\r\n\r\n}\r\n\r\nfunction put(url, param) {\r\n    if (!url) {\r\n        console.error(\"URL is a mandatory field to make an API call\");\r\n        return;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n        Axios.put(url, param).then((resp) => {\r\n            resolve(resp);\r\n        }, () => {\r\n            reject();\r\n        });\r\n    });\r\n}\r\n\r\n\r\n// function setEnviournmentNews() {\r\n//     // const { setNews } = UseBaseContext();\r\n//     const URL = {\r\n//         BASE: 'https://newsapi.org/v2/top-headlines',\r\n//         API_KEY: '0dc8ac7f0e564f7a98de3c56a0d9c640',\r\n//         COUNTRY: 'in',\r\n//         getDefaultUrl: function (country = this.COUNTRY) {\r\n//             return this.BASE + '?apikey=' + this.API_KEY + '&country=' + country;\r\n//         }\r\n//     };\r\n\r\n//     Axios.get(URL.getDefaultUrl()).then((promise) => {\r\n//         // setNews(promise.data.articles);\r\n//         console.log(promise.data.articles);\r\n//     }, function (e) {\r\n//         console.error(e);\r\n//     });\r\n// }\r\n\r\n\r\n// function limitString(string, limit) {\r\n//     return string.substring(string, limit);\r\n// }\r\n\r\nexport {\r\n    getCollections,\r\n    getFilters,\r\n    getDocuments,\r\n    getDocument,\r\n    getEntities,\r\n    uploadDoc,\r\n    updateEntities,\r\n    get\r\n}","import React, { useEffect, useState, useCallback } from 'react'\r\nimport UseBaseContext from '../../ContextApi/UseBaseContext'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { getDocuments } from '../../Utility/API'\r\n\r\nexport default function AccordionCard(props) {\r\n    /* get the context instance */\r\n    const { setData, getData } = UseBaseContext();\r\n\r\n    const [checkedData, setCheckedData] = useState({});\r\n\r\n    const onCheckBoxChange = (e) => {\r\n        let isChecked = e.target.checked;\r\n        let parent = e.target.name;\r\n        let val = e.target.id;\r\n\r\n        let selectedData = getData('filter-data') || {};\r\n\r\n        if (isChecked) {\r\n            if (!selectedData.hasOwnProperty(parent))\r\n                selectedData[parent] = [];\r\n\r\n            setData({\r\n                ...selectedData,\r\n                [parent]: [...selectedData[parent], val]\r\n            },\r\n                'filter-data', applyFilters);\r\n        } else {\r\n            setData({\r\n                ...selectedData,\r\n                [parent]: selectedData[parent].filter(inst => inst != val)\r\n            },\r\n                'filter-data', applyFilters);\r\n        }\r\n    }\r\n\r\n    const applyFilters = (contextData) => {\r\n        // checkedData;\r\n        let id = getData('selectedCollectionId');\r\n        let filterData = contextData['filter-data'];\r\n        let arr = [];\r\n\r\n        setCheckedData(filterData);\r\n        Object.keys(filterData).map((key) => {\r\n            filterData[key].map((val) => {\r\n                arr.push(`${key}:${val}`);\r\n            })\r\n        })\r\n        let finalStr = '&filter=' + arr.join(',');\r\n        getDocuments(id, finalStr).then((data) => {\r\n\r\n            //setting the data in the global context\r\n            setData(data, 'documents');\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Accordion.Toggle as={Card.Header} eventKey={props.event}>\r\n                {props.head}\r\n                <b className=\"float-right\">\r\n                    {JSON.stringify()}\r\n                    {checkedData.hasOwnProperty(props.head) ? checkedData[props.head].length || '' : ''}\r\n                </b>\r\n            </Accordion.Toggle>\r\n            <Accordion.Collapse eventKey={props.event}>\r\n                <Card.Body>\r\n\r\n                    <Form.Group id=\"formGridCheckbox\">\r\n                        {props.checks.map((val) => (\r\n                            <Form.Check custom\r\n                                key={val}\r\n                                onChange={onCheckBoxChange}\r\n                                name={props.head}\r\n                                id={val}\r\n                                type=\"checkbox\"\r\n                                label={val} />\r\n                        ))}\r\n                    </Form.Group>\r\n                </Card.Body>\r\n            </Accordion.Collapse>\r\n        </Card>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function InputGroupBtn(props) {\r\n    const [stateData, setStateData] = useState({\r\n        type: props.type,\r\n        value: props.val\r\n    });\r\n\r\n    const save = () => {\r\n        let type = stateData.type;\r\n        let value = stateData.value;\r\n        props.click();\r\n        if(props.type == type && props.val == value){\r\n            console.log(\"values are same\");\r\n            return false;\r\n        }\r\n       \r\n        props.save(props.type, type, props.val, value, props.activestatus);\r\n    }\r\n\r\n    return (<InputGroup className=\"mb-3 input-btn input-btn-comp\">\r\n        <FormControl\r\n            defaultValue={props.type}\r\n            onChange={(e) => setStateData({ ...stateData, type: e.target.value })}\r\n            aria-label={props.type}\r\n        />\r\n        <FormControl\r\n            defaultValue={props.val}\r\n            onChange={(e) => setStateData({ ...stateData, value: e.target.value })}\r\n            aria-label={props.val}\r\n        />\r\n        <InputGroup.Append>\r\n            <Button variant=\"outline-secondary\" className=\"border-1-gray\" onClick={save}>\r\n                <FontAwesomeIcon icon={faCheck} />\r\n            </Button>\r\n        </InputGroup.Append>\r\n    </InputGroup>);\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faEdit, faStrikethrough } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport InputGroupBtn from './InputGroupBtn'\r\nimport { updateEntities } from '../../Utility/API'\r\n\r\nexport default function DetailSetting(props) {\r\n    const [activeStatus, setActiveStatus] = useState();\r\n\r\n    const onChangeActiveStatus = (typeVal, newStatusVal) => {\r\n        let finalData = data.map((arr) => {\r\n            if (arr['value'] == typeVal) {\r\n                arr['is_active'] = newStatusVal;\r\n                setActiveStatus(newStatusVal);\r\n            }\r\n            return arr;\r\n        });\r\n        let type = props.head;\r\n        let params = [{\r\n            \"_active\": newStatusVal,\r\n            \"previous_type\": type,\r\n            \"updated_type\": type,\r\n            \"previous_value\": typeVal,\r\n            \"updated_value\": typeVal\r\n        }];\r\n        //call the API\r\n        updateEntities(props.cid, props.did, params).then((data) => {\r\n            console.log(\"values updated\", data);\r\n            setData(finalData);\r\n        })\r\n       \r\n    }\r\n\r\n    const onEditReq = (typeVal, newVal) => {\r\n        let finalData = data.map((arr) => {\r\n            if (arr['value'] == typeVal) {\r\n                arr['user_modified'] = newVal;\r\n            }\r\n            return arr;\r\n        });\r\n\r\n        setData(finalData);\r\n    }\r\n\r\n    const onSave = (oldType, newType, oldVal, newVal, status) => {\r\n        //call the API to update the entities\r\n        let params = [{\r\n            \"_active\": status,\r\n            \"previous_type\": oldType,\r\n            \"updated_type\": newType,\r\n            \"previous_value\": oldVal,\r\n            \"updated_value\": newVal\r\n        }]\r\n        updateEntities(props.cid, props.did, params).then((data)=>{\r\n            console.log(\"values updated\", data);\r\n        })\r\n    }\r\n\r\n    const [data, setData] = useState([]);\r\n    useEffect(() => {\r\n        setData(props.val);\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <tbody>\r\n            <tr><th>{props.head}</th></tr>\r\n\r\n            {data.map((val) => (\r\n                <tr className=\"detail-setting\">\r\n                    <td>\r\n                        <div className={val['user_modified'] ? 'hide' : 'show'}>\r\n                            <span className={`text ${!val['is_active'] ? 'line-through' : ''}`}>{val.value}</span>\r\n                            <span className=\"float-right\">\r\n                                <DropdownButton as={ButtonGroup} title={''}>\r\n                                    {(val['is_active']) ?\r\n                                        <Dropdown.Item eventKey=\"1\" onClick={() => onChangeActiveStatus(val.value, false)}>\r\n                                            <FontAwesomeIcon icon={faStrikethrough} />\r\n                                            Disable\r\n                                        </Dropdown.Item>\r\n                                        :\r\n                                        <Dropdown.Item eventKey=\"3\" onClick={() => onChangeActiveStatus(val.value, true)}>\r\n                                            <FontAwesomeIcon icon={faStrikethrough} />\r\n                                            Enable\r\n                                        </Dropdown.Item>\r\n                                    }\r\n\r\n\r\n                                    <Dropdown.Item eventKey=\"2\" onClick={() => onEditReq(val.value, true)}>\r\n                                        <FontAwesomeIcon icon={faEdit} />\r\n                                    Edit\r\n                                </Dropdown.Item>\r\n                                </DropdownButton>\r\n                            </span>\r\n                        </div>\r\n                        <div className={val['user_modified'] ? 'show' : 'hide'}>\r\n                            <InputGroupBtn activestatus={val['is_active']} type={props.head} val={val.value} save={onSave} click={() => onEditReq(val.value, false)} />\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n}","import React from \"react\"\r\nimport DetailSetting from './DetailSetting'\r\n\r\nexport default function DocumentSetting(props) {\r\n\r\n    /* based on the data, create setting object */\r\n    let settings = {};\r\n    props.data.map((val) => {\r\n        if (!settings[val['type']]) {\r\n            settings[val['type']] = [];\r\n        }\r\n        settings[val['type']].push(val)\r\n    });\r\n\r\n    const loop = Object.keys(settings).map((key) => (\r\n        <DetailSetting cid={props.cid} did={props.did} head={key} val={[...settings[key]]} />\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            {loop}\r\n        </>\r\n    );\r\n}","import React from 'react'\r\n\r\nexport default function Box(props) {\r\n\r\n    return (\r\n        <div className={`box box-${props.type || 'primary'} ${props.solid ? 'box-solid' : ''} ${props.css}`}>\r\n            {/* <div className=\"box-header with-border pull-left\">\r\n                <h3 className=\"box-title\">{props.head}</h3>\r\n            </div> */}\r\n\r\n            <div className=\"box-body\">\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Document, Page } from 'react-pdf/dist/entry.webpack';\r\n\r\n\r\nexport default function PDFViewer(props) {\r\n    const [state, setState] = useState({ page: 1 });\r\n\r\n    const onDocumentLoadSuccess = ({ numPages }) => {\r\n        setState({ ...state, totalPage: numPages });\r\n    }\r\n\r\n    const nextClick = () => {\r\n        let pg = state.page;\r\n        setState({ ...state, page: ++pg });\r\n    }\r\n\r\n    const prevClick = () => {\r\n        let pg = state.page;\r\n        setState({ ...state, page: --pg });\r\n    }\r\n\r\n\r\n    return (<div className=\"document-part\">\r\n        <div className=\"pdf-control\">\r\n            <a className={state.page == state.totalPage ? 'hide' : 'show'} onClick={nextClick}>Next</a> &nbsp;&nbsp; <a className={state.page == 1 ? 'hide' : 'show'} onClick={prevClick}>Previous</a>\r\n        </div>\r\n        <Document\r\n            onLoadSuccess={onDocumentLoadSuccess}\r\n            file={props.document}>\r\n            <Page width={window.innerWidth * (8.5 / 12)} pageNumber={state.page} />\r\n        </Document>\r\n    </div>);\r\n}","import React, { useEffect, useState } from 'react'\r\nimport UseBaseContext from './../ContextApi/UseBaseContext'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nimport AccordionCard from '../Components/Project/AccordionCard'\r\nimport DocumentSetting from '../Components/Project/DocumentSetting'\r\nimport Box from '../Components/Project/Box'\r\n\r\nimport { getDocument, get, getEntities } from '../Utility/API'\r\nimport PDFViewer from '../Components/Project/PDFViewer'\r\n\r\nfunction Details(props) {\r\n    /* get the context instance */\r\n    const { getData } = UseBaseContext();\r\n    const [document, setDocument] = useState({});\r\n    const [entityData, setEntityData] = useState([]);\r\n    const [docData, setDocData] = useState('');\r\n    const [viewType, setViewType] = useState('pdf');\r\n    const [textFile, setTextFile] = useState('');\r\n\r\n    const collectionId = props.match.params.cid;\r\n    const documentId = props.match.params.did;\r\n\r\n    if (!documentId) {\r\n        console.error(\"ERROR OCCURRED! Go to home page\");\r\n    }\r\n\r\n    const setDocumentUrl = (data) => {\r\n        let links = data._links;\r\n        if (!links || links.length == 0)\r\n            return '';\r\n\r\n        //plain text\r\n        let link = links.find((link) => link.rel == 'text');\r\n        get(link.href).then((resp) => {\r\n            setTextFile(resp.data);\r\n        })\r\n\r\n        //document\r\n        link = links.find((link) => link.rel == 'file');\r\n        setDocData(link.href);\r\n\r\n    }\r\n    /**\r\n     * get the documents from already saved in context API (saving an API call)\r\n     */\r\n    const init = () => {\r\n        let data = getData('documents');\r\n        if (!data || data.length == 0) {\r\n            //make an API call \r\n            getDocument(collectionId, documentId).then((data) => {\r\n                setDocument(data);\r\n                setDocumentUrl(data);\r\n            });\r\n        } else {\r\n            let d = data.find((v) => v.id == documentId);\r\n            setDocument(d);\r\n            setDocumentUrl(d);\r\n        }\r\n    }\r\n\r\n    const setEntities = () => {\r\n        getEntities(collectionId, documentId).then((data) => {\r\n            setEntityData(data);\r\n        });\r\n    }\r\n\r\n    const onChangeView = (e) => {\r\n        let viewType = e.target.value;\r\n        setViewType(viewType);\r\n    }\r\n\r\n    useEffect(() => {\r\n        init();\r\n        setEntities();\r\n    }, []);\r\n\r\n    let data = ['Loc', 'Invoice Date', 'Billing Cycle', 'Total', 'FAC', 'Invoice', 'Previous Balance'];\r\n    let loop = data.map((val, index) => (\r\n        <AccordionCard head={val} event={index}>\r\n            <Form.Group id=\"formGridCheckbox\">\r\n                <Form.Check type=\"checkbox\" label=\"check box #1\" />\r\n                <Form.Check type=\"checkbox\" label=\"check box #2\" />\r\n                <Form.Check type=\"checkbox\" label=\"check box #3\" />\r\n            </Form.Group>\r\n        </AccordionCard>\r\n    ));\r\n    /* all of the main content goes here  */\r\n    return (\r\n        <section id=\"detail-pg\" className=\"m-2-b custom\">\r\n            <div className=\"row text-l m-l-r-10\">\r\n                <div className=\"col-lg-9 pdf-view\">\r\n                    <Box head=\"Document\" solid={true} type=\"primary\" className=\"box\">\r\n                        <div className=\"text-data\">\r\n                            <div className={viewType == 'pdf' ? 'show' : 'hide'}>\r\n                                <PDFViewer document={docData} />\r\n                            </div>\r\n                            <div className={viewType == 'text' ? 'show' : 'hide'}>\r\n                                {textFile}\r\n                            </div>\r\n                        </div>\r\n                    </Box>\r\n                </div>\r\n                <div class=\"col-lg-3 setting\">\r\n                    <Box head=\"Settings\" solid={true} type=\"primary\">\r\n                        <Form.Group controlId=\"formGridState\">\r\n                            <Form.Control as=\"select\" onChange={onChangeView}>\r\n                                <option value='pdf'>PDF</option>\r\n                                <option value='text'>TEXT</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <table size=\"sm\" className=\"table p-5-tbl setting-tbl \">\r\n                            <DocumentSetting cid={props.match.params.cid} did={props.match.params.did} data={entityData} />\r\n                        </table>\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Details;","import React, { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilePdf, faEye, faTimes, faDownload } from '@fortawesome/free-solid-svg-icons'\r\nimport {\r\n    useHistory\r\n} from \"react-router-dom\";\r\n\r\nexport default function TableCol(props) {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            {props.data.map((data) => (\r\n                <div className=\"single-row\" key={data.id}>\r\n                    <div className=\"icon\">\r\n                        <FontAwesomeIcon icon={faFilePdf} />\r\n                    </div>\r\n                    <div className=\"row pointer\" onClick={() => history.push(`/collections/${props.cid}/details/${data.id}`)}>\r\n                        <div className=\"col-lg-12\"> {data.name}</div>\r\n                        <div className=\"col-lg-12\"> <b>{data.type}</b> |  {data.created_on}</div>\r\n                    </div>\r\n                    <div className=\"toolbar\">\r\n                    <span className=\"action-btn\"><FontAwesomeIcon icon={faTimes} /></span>\r\n                    <span className=\"action-btn\"><FontAwesomeIcon icon={faDownload} /></span>\r\n                    </div>\r\n                </div>\r\n                // <tr key={data.id}>\r\n                //     <td><FontAwesomeIcon icon={faFilePdf} /></td>\r\n                //     <td width=\"50%\">\r\n                //         <div className=\"pointer\" onClick={() => history.push(`/collections/${props.cid}/details/${data.id}`)}>\r\n                //             {data.name}\r\n                //         </div>\r\n                //     </td>\r\n                //     <td>{data.type}</td>\r\n                //     <td>{data.created_on}</td>\r\n                //     <td>\r\n                //         <div>\r\n                //             <span className=\"action-btn\"><FontAwesomeIcon icon={faTimes} /></span>\r\n                //             <span className=\"action-btn\"><FontAwesomeIcon icon={faDownload} /></span>\r\n                //         </div>\r\n                //     </td>\r\n                // </tr>\r\n            ))}\r\n        </>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilter } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function FilterInFoText(props) {\r\n    return (<div className=\"filter-text\">\r\n\r\n        {\r\n            Object.keys(props.data).map((key) => (\r\n                <div key={key} className={props.data[key].length > 0?'show':'hide'}>\r\n                    <FontAwesomeIcon icon={faFilter} />  &nbsp;\r\n                    <b className=\"head\">{key}</b> &nbsp; &nbsp;\r\n                    <span className=\"body-text\">{props.data[key].length > 0 ? props.data[key].join(\", \") : \"\"}</span>\r\n                </div>\r\n            ))\r\n        }\r\n    </div>)\r\n}","import React, { useEffect, useState } from 'react'\r\nimport UseBaseContext from './../ContextApi/UseBaseContext'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Table from 'react-bootstrap/Table'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport AccordionCard from '../Components/Project/AccordionCard'\r\nimport Box from '../Components/Project/Box'\r\nimport TableCol from '../Components/Project/TableCol'\r\nimport FilterInFoText from '../Components/Project/FilterInFoText'\r\n\r\nimport { getCollections, getFilters, getDocuments, uploadDoc } from '../Utility/API'\r\nimport { checkAndSetData } from '../Utility/Utility'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Collections() {\r\n    /* get the context instance */\r\n    const { setData, getData } = UseBaseContext();\r\n\r\n    /* managing state */\r\n    const [collectionData, setCollectionData] = useState([]);\r\n    const [filterData, setFilterData] = useState([]);\r\n    const [selectedData, setSelectedData] = useState({});\r\n    const [inputRef, setInputRef] = useState('');\r\n    const [uploadedFile, setUploadedFile] = useState('');\r\n\r\n    //////////////////////////////////////////////////\r\n    /* place for all functions */\r\n    //@id optional \r\n    function init(id) {\r\n        setCollections(id).then((selectedId) => {\r\n\r\n            setFilters(selectedId);\r\n            setDocuments(selectedId);\r\n        })\r\n    }\r\n\r\n    const setCollections = (selectedId) => {\r\n        return new Promise((res, rej) => {\r\n            // let isDataAvail = checkAndSetData('collections', getData, setCollectionData);\r\n            // if (isDataAvail)\r\n            //     res(getData('collections'));\r\n\r\n            //call the api if the data is not available \r\n            getCollections().then((data) => {\r\n\r\n                if (!data || data.length == 0)\r\n                    return;\r\n\r\n                let firstCollection = data[0];\r\n                let id = selectedId || firstCollection.id;\r\n\r\n                //set the data to state\r\n                setSelectedData({ ...selectedData, collection: id });\r\n                setCollectionData(data);\r\n\r\n                //save the data to context\r\n                setData(id, 'selectedCollectionId');\r\n                setData(data, 'collections');\r\n\r\n                res(id)\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    const setFilters = (id) => {\r\n        id = id || selectedData.collection\r\n        getFilters(id).then((data) => {\r\n            setFilterData(data);\r\n            setData(data, 'filters');\r\n        });\r\n    }\r\n\r\n    const setDocuments = (id) => {\r\n        id = id || selectedData.collection;\r\n        // let isDataAvail = checkAndSetData('documents', getData, setDocListData);\r\n        // if (isDataAvail && !isNewRequest)\r\n        //     return true;\r\n        getDocuments(id).then((data) => {\r\n\r\n            //setting the data in the global context\r\n            setData(data, 'documents');\r\n        });\r\n    }\r\n\r\n    const changeCollection = (e) => {\r\n        setSelectedData({ ...selectedData, collection: e.target.value });\r\n        setData(e.target.values, 'selectedCollectionId');\r\n        init(e.target.value);\r\n    }\r\n\r\n    const onFileChange = (e) => {\r\n        let file = e.target.files[0];\r\n        const formData = new FormData();\r\n        formData.append(\"cid\", selectedData.collection);\r\n        formData.append(\r\n            \"files\",\r\n            file,\r\n            file.name\r\n        );\r\n\r\n        //call the API\r\n        uploadDoc(selectedData.collection, formData).then(() => {\r\n            setDocuments(selectedData.collection);\r\n            setFilters(selectedData.collection);\r\n        })\r\n    }\r\n\r\n    const onFileUpload = () => {\r\n        inputRef.click();\r\n    }\r\n    //////////////////////////////////////////////////\r\n\r\n    useEffect(() => {\r\n        init();\r\n    }, []);\r\n\r\n\r\n    //loop\r\n    let filterLoop = [];\r\n    if (filterData && filterData.length > 0) {\r\n        filterLoop = filterData.map((data, index) => (\r\n            <AccordionCard key={data.label} head={data.label} event={index} checks={data.keywords}></AccordionCard>\r\n        ));\r\n    }\r\n\r\n    /* all of the main content goes here  */\r\n    return (\r\n        <section id=\"home-pg\" className=\"custom\">\r\n            <div className=\"row text-l m-l-r-10\">\r\n                <div className=\"col-lg-3\">\r\n                    {/* <Box head=\"Select Collections\" solid={true} type=\"primary\"> */}\r\n                    <small>Select Collection</small>\r\n                    <Form.Group md=\"4\" controlId=\"formGridState\">\r\n                        <Form.Control as=\"select\" onChange={changeCollection}>\r\n                            {\r\n                                collectionData.map((data) => (\r\n                                    <option value={data.id} key={data.name}>{data.name}</option>\r\n                                ))\r\n                            }\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    {/* </Box> */}\r\n                </div>\r\n                <div className=\"col-lg-9\">\r\n                    <div className=\"filter-element\">\r\n                        <div className=\"opt\">\r\n                            <small>Order By</small>\r\n                            <Form.Group md=\"3\" className=\"w-240\" controlId=\"formGridState\">\r\n                                <Form.Control as=\"select\" onChange={changeCollection}>\r\n                                    <option value={1} key={1}>{\"Date Modified\"}</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </div>\r\n                        <div className=\"opt-upload-btn\">\r\n                            <input type=\"file\" ref={inp => setInputRef(inp)} className=\"hide\" onChange={onFileChange} />\r\n                            <Button variant=\"primary\" onClick={onFileUpload}>\r\n                                <FontAwesomeIcon icon={faUpload} />\r\n                                    &nbsp; Upload\r\n                                </Button>{' '}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-3\">\r\n                    <Box head=\"Filters\" solid={true} type=\"primary\">\r\n                        <Accordion defaultActiveKey=\"0\">\r\n                            {filterLoop}\r\n                        </Accordion>\r\n                    </Box>\r\n                </div>\r\n\r\n                <div className=\"col-lg-9\">\r\n                    <Box head=\"Document List\" solid={true} type=\"primary\">\r\n                        <FilterInFoText data={getData('filter-data') || {}} />\r\n                        <div className=\"doc-list\">\r\n                            <TableCol cid={selectedData.collection} data={getData('documents') || []} />\r\n                        </div>\r\n                        {/* <Table bordered hover size=\"sm\">\r\n                            <TableCol cid={selectedData.collection} data={getData('documents') || []} />\r\n                        </Table> */}\r\n                    </Box>\r\n                </div>\r\n            </div>\r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Collections;","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Pages/Header'\r\nimport Home from './Pages/Home'\r\nimport Details from './Pages/Details'\r\nimport Collections from './Pages/Collections'\r\nimport { getRoutes } from './Utility/Config'\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n} from 'react-router-dom';\r\n\r\nimport { BaseContextProvider } from './ContextApi/BaseContext'\r\n\r\nfunction App() {\r\n  const CONFIG = getRoutes();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BaseContextProvider>\r\n        <Header />\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Home} />\r\n            <Route exact path={`/${CONFIG.ROUTE.COLLECTIONS}`} component={Collections} />\r\n            <Route exact path={`/${CONFIG.ROUTE.COLLECTIONS}/:cid/${CONFIG.ROUTE.DETAILS}/:did`} component={Details} />\r\n          </Switch>\r\n        </Router>\r\n      </BaseContextProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 58;"],"sourceRoot":""}